
KNN

KNN是机器学习中的分类算法，它将一个未知类别的样本归类为距离它最近的k个样本中最多数的类别。它的算法原理如下所示：
1.为了判断未知实例的类别，以所有已知类别的实例作为参照，选择一个参数K。
2.计算未知实例到到已知实例的距离，
3.将这些距离进行排序，选择前k个距离，
4.将未知实例归类为这K个最近邻样本中最多数的类别。

接下来我们将使用KNN算法实现对一组电影的分类，电影数据包含10条数据集的测试集和2条数据的训练集，这批电影共有两个动作镜头数和接吻镜头数两个特征，每部电影都对应一个分类标签值，共有“动作”，“爱情”两个类别。
第一步，我们导入相关的包
In [ ]:

from sklearn.neighbors import KNeighborsClassifier
from sklearn.neighbors import KNeighborsRegressor
import numpy as np

第二步 提供数据集
In [9]:

X_train=[[19,1],[2,18],[25,1],[24,3],[3,17],[5,10],[7,8],[5,4],[5,3]]
Y_train=['动作','爱情','动作','动作','爱情','爱情','爱情','动作','动作']
X_test=[[13,10],[5,10]]
display(X_train,x_test,Y_train)

[[19, 1], [2, 18], [25, 1], [24, 3], [3, 17], [5, 10], [7, 8], [5, 4], [5, 3]]

[[13, 10], [5, 10]]

['动作', '爱情', '动作', '动作', '爱情', '爱情', '爱情', '动作', '动作']

第三步，构建KNN 分类器

请同学在下面代码区构建KNN分类器，将KNN算法中的K取5.
In [ ]:

##代码区
knnclf=KNeighborsClassifier(n_neighbors=5)


第四步 将电影数据由列表转换为数组

给定的数据集是列表格式，我们需要转换为数组，方便后续的数据的计算；请同学们在下列代码区将数据集转换为数组格式
In [13]:

##代码区
X_train=np.array(X_train)
Y_train=np.array(Y_train)
X_test=np.array(X_test)
display(X_train,x_test,Y_train)

array([[19,  1],
       [ 2, 18],
       [25,  1],
       [24,  3],
       [ 3, 17],
       [ 5, 10],
       [ 7,  8],
       [ 5,  4],
       [ 5,  3]])

[[13, 10], [5, 10]]

array(['动作', '爱情', '动作', '动作', '爱情', '爱情', '爱情', '动作', '动作'], dtype='<U2')

训练分类器以及对测试集进行类别的预测

请同学们在下列代码区对KNN分类器进行训练以及对测试集进行预测类别
In [12]:

##代码区
knnclf.fit(X_train,Y_train)
knnclf.predict(X_test)

Out [12]:

array(['动作', '爱情'], dtype='<U2')