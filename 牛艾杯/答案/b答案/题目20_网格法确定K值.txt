
题目：使用网格法(GridSearchCV)确定KNN中K的取值

GridSearchCV可以保证在指定的参数范围内找到精度最高的参数；GridSearchCV 函数内置在sklearn.model_selection模块中

要求：使用GridSearchCV 函数确定KNN算法中K的取值，数据集为鸢尾花数据集，按照下列提示补充代码
网格法(GridSearchCV)

网格法(GridSearchCV)是机器学习中用来自动调参的函数。GridSearchCV函数实现的功能有两个，即网格搜索和交叉验证。
网格搜索，搜索的是参数，即在指定的参数范围内，按步长依次调整参数，利用调整的参数训练学习器，从所有的参数中找到在验证集上精度最高的参数，这其实是一个训练和比较的过程。
k折交叉验证(注意与KNN中的K值区分开来)将所有数据集分成k份，不重复地每次取其中一份做测试集，用其余k-1份做训练集训练模型，之后计算该模型在测试集上的得分,将k次的得分取平均得到最后的得分。
1.实现从datasets模块中导入鸢尾花（iris）数据集


请在下方代码的基础上将<None>处代码补充完整。

from sklearn.model_selection import GridSearchCV  #通过网格方式来搜索参数
from sklearn import datasets
from sklearn.neighbors import KNeighborsClassifier
<None>
<None>
<None>

In [1]:

#请在此处编写代码
from sklearn.model_selection import GridSearchCV  #通过网格方式来搜索参数
from sklearn import datasets
from sklearn.neighbors import KNeighborsClassifier
iris=datasets.load_iris()
x=iris.data
y=iris.target

2.通过GridSearchCV来搜索最好的k值,并训练分类器


请在下方代码的基础上将<None>处代码补充完整。

parameters={'n_neighbors':[1,3,5,7,9,11,13,15]} 
knn=KNeighborsClassifier() 
<None>
<None>

In [6]:

#请在此处编写代码
parameters={'n_neighbors':[1,3,5,7,9,11,13,15]} 
knn=KNeighborsClassifier() 
clf=GridSearchCV(knn,parameters,cv=5) #5折交叉验证
clf.fit(x,y)

Out [6]:

GridSearchCV(cv=5, estimator=KNeighborsClassifier(),
             param_grid={'n_neighbors': [1, 3, 5, 7, 9, 11, 13, 15]})

3.输出最好的K的值以及准确率；
In [7]:

#请在此处编写代码
print("最优准确率：%.3f"%clf.best_score_,"最优的n_neighbors：",clf.best_params_) 

最优准确率：0.980 最优的n_neighbors： {'n_neighbors': 7}
