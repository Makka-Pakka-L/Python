--------------------------------knn---------------------------------------------------
K-近邻算法API
	sklearn.neighbors.KNeighborsClass(n_neighbors=5)
		n_neighbors:int,可选(默认=5),k_neighbors查询默认使用的邻居数


--------------------------------案例---------------------------------------------------
1.步骤分析
	(1).获取数据集
	(2).数据基本处理
	(3).特征工程
	(4).机器学习

2.代码过程
#导入模块
	form sklearn.neighbors import KNeighborsClassifier
#构建数据集
	x = [[0],[1],[2],[3]]，
	y = [0,0,1,1]	#是指x中的以一维数组的类别，就是[[0],[1]]是组别0,[[2],[3]]是组别1
#机器学习 -- 模型训练
	#实例化API
	estimator = KNeighborsClassifier(n_neighbors=2)
	#使用fit方法进行训练
	estimator.fit(x,y)
	estimator.predict([1])

-------------------------------鸢尾花----------------------------------------------------
1.scikit-learn数据集APL介绍
	sklearn.dataets
	#加载获取流行数据集
		dataets.load_*()
			#获取小规模数据集,数据包含在datasets
		dataets.fetch_*(data_home=None)
		#获取大规模数据,需要从网络上下载,home=None是默认下载地址~/sciki_learn_data

2.sklearn小数据集
	sklearn.dataets.load_iris()
		#加载并返回鸢尾花数据集

3.sklearn大数据集
	sklearn.dataets.fetch_20newsgroups(data_home=None,subset='train')














































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































